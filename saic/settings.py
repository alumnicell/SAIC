"""
Django settings for saic project.

Generated by 'django-admin startproject' using Django 1.9.2.

For more information on this file, see
https://docs.djangoproject.com/en/1.9/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.9/ref/settings/
"""

import os
from django.conf.global_settings import TEMPLATE_CONTEXT_PROCESSORS

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

HOST="iitbhualumni.net"

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.9/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '=f04i&nj#4nfj5gxu3qe-0xv3zh+ej7$yb_u(yhhjm!18dzk6%'







# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

#ALLOWED_HOSTS = []
MEDIA_ROOT = os.path.join(BASE_DIR, "static", "defaultImage")

MEDIA_URL='/images/'

ADMINS = (('Admin', 'skumar.banka.min13@iitbhu.ac.in'),)
MANAGERS = (('Admin', 'admin@itbhualumni.net'),)
ALLOWED_HOSTS = ['*']

#MEDIA_ROOT = '/home3/itbhunet/public_html/itbhualumni/static/defaultImage/'

#MEDIA_URL='/images/'
# Application definition

DEFAULT_APPS = [
    'portal.apps.PortalConfig',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    # 'payu',
    # 'portal',
    'el_pagination',
    # social auth
    'social.apps.django_app.default',
    # 'social_django'
]




INSTALLED_APPS=DEFAULT_APPS

MIDDLEWARE_CLASSES = [
    'django.middleware.gzip.GZipMiddleware',
    'htmlmin.middleware.HtmlMinifyMiddleware',
    #'django.middleware.cache.UpdateCacheMiddleware',
    'django.middleware.common.CommonMiddleware',
    #'django.middleware.cache.FetchFromCacheMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.auth.middleware.SessionAuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',


]

ROOT_URLCONF = 'saic.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates'),],
        # 'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'social.apps.django_app.context_processors.backends',
                'social.apps.django_app.context_processors.login_redirect',
                'django.core.context_processors.request',
            ],
        },
    },
]

WSGI_APPLICATION = 'saic.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.9/ref/settings/#databases


# This is the production DB.

DATABASES = {
      'default': {
        # 'ENGINE': 'django.db.backends.sqlite3',
        # 'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
        'ENGINE':'django.db.backends.mysql',
        'NAME':'iitbhu_saic_active',
        'USER':'root',
        'PASSWORD':'drow.Ssap',
        'HOST':'127.0.0.1',
        'PORT':'3306',
    }
}

# This is the test DB

# DATABASES = {
#       'default': {
#         # 'ENGINE': 'django.db.backends.sqlite3',
#         # 'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
#         'ENGINE':'django.db.backends.mysql',
#         'NAME':'saic_test',
#         'USER':'root',
#         'PASSWORD':'drow.Ssap',
#         'HOST':'127.0.0.1',
#         'PORT':'3306',
#     }
# }

# In

# Password validation
# https://docs.djangoproject.com/en/1.9/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

AUTH_USER_MODEL='portal.MyUser'

LOGIN_URL='/login/'
WSGI_APPLICATION = 'saic.wsgi.application'
EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'
#EMAIL_USE_TLS = True
#EMAIL_HOST = 'smtp.gmail.com'
# SESSION_COOKIE_SECURE= True
# CSRF_COOKIE_SECURE= True
# EMAIL_USE_SSL= True
EMAIL_HOST="box884.bluehost.com"
EMAIL_HOST_USER = 'admin@itbhualumni.net'
EMAIL_HOST_PASSWORD = 'i.o3iDQ]c%d9'
EMAIL_PORT = 465


##-------------------------Recaptcha Key-----------------------------------------------
RECAPTCHA_SECRET_KEY='6Ldofx8TAAAAAEbfhh2nAKCksTFBpY4f4tg9eQu3'


# Internationalization
# https://docs.djangoproject.com/en/1.9/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Asia/Kolkata'

USE_I18N = True

USE_L10N = True

USE_TZ = False

HTML_MINIFY= True

LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'filters': {
        'require_debug_false': {
            '()': 'django.utils.log.RequireDebugFalse'
        }
    },
    'handlers': {
        'mail_admins': {
            'level': 'ERROR',
            'filters': ['require_debug_false'],
            'class': 'django.utils.log.AdminEmailHandler'
        },
        'file': {
            'level': 'DEBUG',
            'class': 'logging.FileHandler',
            'filename': os.path.join(BASE_DIR, "portal/debug.log"),
        },
        'file2': {
            'level': 'DEBUG',
            'class': 'logging.FileHandler',
            'filename': os.path.join(BASE_DIR, "portal/checkout.log"),
        },
    },
    'loggers': {
        'django.request': {
            'handlers': ['mail_admins'],
            'level': 'ERROR',
            'propagate': True,
        },
        'payment.log': {
            'handlers': ['file'],
            'level': 'DEBUG',
            'propagate': True,
        },
         'checkout.log': {
            'handlers': ['file2'],
            'level': 'DEBUG',
            'propagate': True,
        },
    }
}

PAYU_INFO = {#'merchant_key': "FWB5d7",
             #'merchant_salt': "7kDKIU4s",
             'payment_url':'https://secure.payu.in/_payment',
             #'payment_url':'https://test.payu.in/_payment',
              'merchant_key_rupee':"yawcgj",
              'salt_rupee':"9AajyYFb",
            'merchant_key_usd':"ECwRZu",
              'salt_usd':"BHHT43Lm",  
	
				#test
				#'merchant_key_rupee':"FWB5d7",
             	 #'salt_rupee':"7kDKIU4s",
				#'merchant_key_usd':"FWB5d7",
             	#'salt_usd':"7kDKIU4s",  
					
}




CACHE_BACKEND = 'memcached://127.0.0.1:11211/'
# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.9/howto/static-files/

STATICFILES_DIRS = (
    os.path.join(BASE_DIR, "static"),)
STATIC_ROOT="/var/www/saic/SAIC/static/"
STATIC_URL = '/static/'

# for social auth sign in
SOCIAL_AUTH_USER_MODEL = 'portal.MyUser'

# If you want to use the full email address as the username, define this setting.
SOCIAL_AUTH_USERNAME_IS_FULL_EMAIL = True

# During the pipeline process a dict named details will be populated with the needed values to create the user instance,
# but it's also used to update the user instance. Any value in it will be checked as an attribute in the user instance
# (first by doing hasattr(user, name)). Usually there are attributes that cannot be updated (like username, id, email, etc.),
# those fields need to be protect. Set any field name that requires protection in this setting, and it won't be updated.
SOCIAL_AUTH_PROTECTED_USER_FIELDS = ['email','category']

# These URLs are used on different steps of the auth process, some for successful results and others for error situations.

SOCIAL_AUTH_LOGIN_REDIRECT_URL = '/portal/'
# Used to redirect the user once the auth process ended successfully. The value of ?next=/foo is used if it was present
SOCIAL_AUTH_LOGIN_ERROR_URL = '/login-error/'
# URL where the user will be redirected in case of an error
SOCIAL_AUTH_LOGIN_URL = '/login-error/'
# Is used as a fallback for LOGIN_ERROR_URL

# SOCIAL_AUTH_NEW_USER_REDIRECT_URL = '/first/'

# SOCIAL_AUTH_NEW_ASSOCIATION_REDIRECT_URL = '/new-association-redirect-url/'
# Like SOCIAL_AUTH_NEW_USER_REDIRECT_URL but for new associated accounts (user is already logged in). Used in place of SOCIAL_AUTH_LOGIN_REDIRECT_URL
# SOCIAL_AUTH_DISCONNECT_REDIRECT_URL = '/'
# The user will be redirected to this URL when a social account is disconnected
# SOCIAL_AUTH_INACTIVE_USER_URL = '/inactive-user/'
# Inactive users can be redirected to this URL when trying to authenticate.
# Successful URLs will default to SOCIAL_AUTH_LOGIN_URL while error URLs will fallback to SOCIAL_AUTH_LOGIN_ERROR_URL.

AUTHENTICATION_BACKENDS = (
  'social.backends.google.GoogleOAuth2',
  'social.backends.linkedin.LinkedinOAuth2',
  # 'social.backends.facebook.FacebookOAuth2',
  'django.contrib.auth.backends.ModelBackend',
)

SOCIAL_AUTH_PIPELINE = (

    # 'social.pipeline.debug.debug',
    # Get the information we can about the user and return it in a simple
    # format to create the user instance later. On some cases the details are
    # already part of the auth response from the provider, but sometimes this
    # could hit a provider API.
    'social.pipeline.social_auth.social_details',
    # 'social.pipeline.debug.debug',
    # Get the social uid from whichever service we're authing thru. The uid is
        # the unique identifier of the given user in the provider.
    'social.pipeline.social_auth.social_uid',
    # 'social.pipeline.debug.debug',
    # Verifies that the current auth process is valid within the current
        # project, this is were emails and domains whitelists are applied (if
        # defined).
    'social.pipeline.social_auth.auth_allowed',
    # 'social.pipeline.debug.debug',
    # Checks if the current social-account is already associated in the site.
    'social.pipeline.social_auth.social_user',
    # 'social.pipeline.debug.debug',
    # Make up a username for this person, appends a random string at the end if
    # there's any collision.
    'social.pipeline.user.get_username',
    # 'social.pipeline.debug.debug',
    # Send a validation email to the user to verify its email address.
        # Disabled by default.
    # 'social.pipeline.mail.mail_validation',

    # Associates the current social details with another user account with
        # a similar email address. Disabled by default.
    # 'social.pipeline.social_auth.associate_by_email',

    # Create a user account if we haven't found one yet.
    # 'social.pipeline.debug.debug',
    'social.pipeline.user.create_user',
    # 'social.pipeline.debug.debug',
    #  myown pipeline
    'portal.pipeline.save_username',

    # Create the record that associated the social account with this user.
    'social.pipeline.social_auth.associate_user',

    # Populate the extra_data field in the social record with the values
    # specified by settings (and the default ones like access_token, etc).
    'social.pipeline.social_auth.load_extra_data',

    # Update the user record with any changed info from the auth service.
    'social.pipeline.user.user_details',

    # myown pipeline for first time users to fill up Alumni Form
    'portal.pipeline.alumni_form',
)

# Google
SOCIAL_AUTH_GOOGLE_OAUTH2_KEY = "715810090374-tm2k6mqdnj67eoc79f4v1rue213l98tp.apps.googleusercontent.com"
SOCIAL_AUTH_GOOGLE_OAUTH2_SECRET = "X5tDfuktY5sfUHHuyrEmRxmh"

# LinkedIn
SOCIAL_AUTH_LINKEDIN_OAUTH2_KEY = '77bjfkrhdaxejh'
SOCIAL_AUTH_LINKEDIN_OAUTH2_SECRET = 'rEzFoGlkbNYY617N'
SOCIAL_AUTH_LINKEDIN_OAUTH2_SCOPE = ['r_basicprofile', 'r_emailaddress',]
SOCIAL_AUTH_LINKEDIN_OAUTH2_FIELD_SELECTORS = ['email-address', 'headline', 'industry']
SOCIAL_AUTH_LINKEDIN_OAUTH2_EXTRA_DATA = [('id', 'id'),
                                   ('firstName', 'first_name'),
                                   ('lastName', 'last_name'),
                                   ('email', 'email_address'),
                                   ('headline', 'headline'),
                                   ('industry', 'industry')]

# Facebook
SOCIAL_AUTH_FACEBOOK_KEY = '170926729946787'
SOCIAL_AUTH_FACEBOOK_SECRET = '7e71caf1acb29c5c478b3878030904da'
SOCIAL_AUTH_FACEBOOK_SCOPE = ['email']
#Image upload Resizer
DJANGORESIZED_DEFAULT_SIZE = [1920, 1080]
DJANGORESIZED_DEFAULT_QUALITY = 75
DJANGORESIZED_DEFAULT_KEEP_META = True
GALLERY_PATH=os.path.join(BASE_DIR,"static/gallery/")

